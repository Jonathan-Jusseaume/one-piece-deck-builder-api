CREATE TABLE IF NOT EXISTS UT_COLOR
(
    ID INTEGER,
    CONSTRAINT PK_COLOR PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS UT_COLOR_DESCRIPTION
(
    COLOR_ID      INTEGER,
    LANGUAGE_CODE VARCHAR(5),
    NAME          VARCHAR(30) NOT NULL,
    CONSTRAINT PK_COLOR_ID PRIMARY KEY (COLOR_ID, LANGUAGE_CODE),
    CONSTRAINT FK_COLOR FOREIGN KEY (COLOR_ID) REFERENCES UT_COLOR (ID)
);

CREATE TABLE IF NOT EXISTS UT_ATTRIBUTE
(
    ID INTEGER,
    CONSTRAINT PK_ATTRIBUTE PRIMARY KEY (ID)
);

CREATE TABLE UT_ATTRIBUTE_DESCRIPTION
(
    ATTRIBUTE_ID  INTEGER,
    LANGUAGE_CODE VARCHAR(5),
    NAME          VARCHAR(30) NOT NULL,
    CONSTRAINT PK_ATTRIBUTE_ID PRIMARY KEY (ATTRIBUTE_ID, LANGUAGE_CODE),
    CONSTRAINT FK_ATTRIBUTE FOREIGN KEY (ATTRIBUTE_ID) REFERENCES UT_ATTRIBUTE (ID)
);

CREATE TABLE UT_RARITY
(
    ID    INTEGER,
    LABEL VARCHAR(30),
    CONSTRAINT PK_RARITY_ID PRIMARY KEY (ID)
);

CREATE TABLE UT_TYPE
(
    ID INTEGER,
    CONSTRAINT PK_TYPE PRIMARY KEY (ID)
);

CREATE TABLE UT_TYPE_DESCRIPTION
(
    TYPE_ID       INTEGER,
    LANGUAGE_CODE VARCHAR(5),
    NAME          VARCHAR(30) NOT NULL,
    CONSTRAINT PK_TYPE_DESCRIPTION_ID PRIMARY KEY (TYPE_ID, LANGUAGE_CODE),
    CONSTRAINT FK_TYPE FOREIGN KEY (TYPE_ID) REFERENCES UT_TYPE (ID)
);

CREATE TABLE UT_TAG
(
    ID INTEGER,
    CONSTRAINT PK_TAG PRIMARY KEY (ID)
);

CREATE TABLE UT_TAG_DESCRIPTION
(
    TAG_ID        INTEGER,
    LANGUAGE_CODE VARCHAR(5),
    NAME          VARCHAR(100) NOT NULL,
    CONSTRAINT PK_TAG_DESCRIPTION_ID PRIMARY KEY (TAG_ID, LANGUAGE_CODE),
    CONSTRAINT FK_TAG FOREIGN KEY (TAG_ID) REFERENCES UT_TAG (ID)
);

CREATE TABLE UT_PRODUCT
(
    ID           VARCHAR(50),
    RELEASE_DATE DATE,
    CONSTRAINT PK_PRODUCT_ID PRIMARY KEY (ID)
);

CREATE TABLE UT_PRODUCT_DESCRIPTION
(
    PRODUCT_ID    VARCHAR(50),
    LANGUAGE_CODE VARCHAR(5),
    NAME          VARCHAR(100),
    CONSTRAINT PK_PRODUCT_DESCRIPTION PRIMARY KEY (PRODUCT_ID, LANGUAGE_CODE),
    CONSTRAINT FK_PRODUCT FOREIGN KEY (PRODUCT_ID) REFERENCES UT_PRODUCT (ID)
);

CREATE TABLE UT_CARD
(
    ID           VARCHAR(50),
    TYPE_ID      INTEGER,
    ATTRIBUTE_ID INTEGER,
    COST         INTEGER,
    POWER        INTEGER,
    LIFE         INTEGER,
    COUNTER      INTEGER,
    CONSTRAINT PK_CARD_ID PRIMARY KEY (ID),
    CONSTRAINT FK_CARD_TYPE FOREIGN KEY (TYPE_ID) REFERENCES UT_TYPE (ID),
    CONSTRAINT FK_CARD_ATTRIBUTE FOREIGN KEY (ATTRIBUTE_ID) REFERENCES UT_ATTRIBUTE (ID)
);

CREATE TABLE UT_CARD_DESCRIPTION
(
    CARD_ID       VARCHAR(50),
    LANGUAGE_CODE VARCHAR(5),
    NAME          VARCHAR(100),
    EFFECT        TEXT,
    CONSTRAINT PK_CARD_DESCRIPTION PRIMARY KEY (CARD_ID, LANGUAGE_CODE),
    CONSTRAINT FK_CARD FOREIGN KEY (CARD_ID) REFERENCES UT_CARD (ID)
);

CREATE TABLE UT_CARD_IMAGE
(
    ID      SERIAL,
    CARD_ID VARCHAR(50),
    RARITY_ID INTEGER,
    PRODUCT_ID VARCHAR(50),
    NAME    VARCHAR(100) UNIQUE,
    CONSTRAINT PK_CARD_IMAGE PRIMARY KEY (ID),
    CONSTRAINT FK_CARD_IMAGE_CARD FOREIGN KEY (CARD_ID) REFERENCES UT_CARD (ID),
    CONSTRAINT FK_CARD_IMAGE_RARITY FOREIGN KEY (RARITY_ID) REFERENCES UT_RARITY(ID),
    CONSTRAINT FK_CARD_IMAGE_PRODUCT FOREIGN KEY (PRODUCT_ID) REFERENCES UT_PRODUCT(ID)
);

CREATE TABLE UT_CARD_COLOR
(
    COLOR_ID INTEGER,
    CARD_ID  VARCHAR(50),
    CONSTRAINT PK_CARD_COLOR PRIMARY KEY (CARD_ID, COLOR_ID),
    CONSTRAINT FK_CARD_COLOR_COLOR FOREIGN KEY (COLOR_ID) REFERENCES UT_COLOR (ID),
    CONSTRAINT FK_CARD_COLOR_CARD FOREIGN KEY (CARD_ID) REFERENCES UT_CARD (ID)
);

CREATE TABLE UT_CARD_TAG
(
    TAG_ID  INTEGER,
    CARD_ID VARCHAR(50),
    CONSTRAINT PK_CARD_TAG PRIMARY KEY (CARD_ID, TAG_ID),
    CONSTRAINT FK_CARD_TAG_TAG FOREIGN KEY (TAG_ID) REFERENCES UT_TAG (ID),
    CONSTRAINT FK_CARD_TAG_CARD FOREIGN KEY (CARD_ID) REFERENCES UT_CARD (ID)
);
