CREATE TABLE IF NOT EXISTS UT_COLOR
(
    ID INTEGER,
    CONSTRAINT PK_COLOR PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS UT_COLOR_DESCRIPTION
(
    COLOR_ID      INTEGER,
    LANGUAGE_CODE VARCHAR(5),
    NAME          VARCHAR(30) NOT NULL,
    CONSTRAINT PK_COLOR_ID PRIMARY KEY (COLOR_ID, LANGUAGE_CODE),
    CONSTRAINT FK_COLOR FOREIGN KEY (COLOR_ID) REFERENCES UT_COLOR (ID)
);

CREATE TABLE IF NOT EXISTS UT_ATTRIBUTE
(
    ID INTEGER,
    CONSTRAINT PK_ATTRIBUTE PRIMARY KEY (ID)
);

CREATE TABLE UT_ATTRIBUTE_DESCRIPTION
(
    ATTRIBUTE_ID  INTEGER,
    LANGUAGE_CODE VARCHAR(5),
    NAME          VARCHAR(30) NOT NULL,
    CONSTRAINT PK_ATTRIBUTE_ID PRIMARY KEY (ATTRIBUTE_ID, LANGUAGE_CODE),
    CONSTRAINT FK_ATTRIBUTE FOREIGN KEY (ATTRIBUTE_ID) REFERENCES UT_ATTRIBUTE (ID)
);

CREATE TABLE UT_RARITY
(
    ID    INTEGER,
    LABEL VARCHAR(30),
    CONSTRAINT PK_RARITY_ID PRIMARY KEY (ID)
);

CREATE TABLE UT_TYPE
(
    ID INTEGER,
    CONSTRAINT PK_TYPE PRIMARY KEY (ID)
);

CREATE TABLE UT_TYPE_DESCRIPTION
(
    TYPE_ID       INTEGER,
    LANGUAGE_CODE VARCHAR(5),
    NAME          VARCHAR(30) NOT NULL,
    CONSTRAINT PK_TYPE_DESCRIPTION_ID PRIMARY KEY (TYPE_ID, LANGUAGE_CODE),
    CONSTRAINT FK_TYPE FOREIGN KEY (TYPE_ID) REFERENCES UT_TYPE (ID)
);

CREATE TABLE UT_TAG
(
    ID INTEGER,
    CONSTRAINT PK_TAG PRIMARY KEY (ID)
);

CREATE TABLE UT_TAG_DESCRIPTION
(
    TAG_ID        INTEGER,
    LANGUAGE_CODE VARCHAR(5),
    NAME          VARCHAR(100) NOT NULL,
    CONSTRAINT PK_TAG_DESCRIPTION_ID PRIMARY KEY (TAG_ID, LANGUAGE_CODE),
    CONSTRAINT FK_TAG FOREIGN KEY (TAG_ID) REFERENCES UT_TAG (ID)
);
